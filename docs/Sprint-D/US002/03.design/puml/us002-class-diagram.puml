@startuml
class Agent {
  + displayAndSelectAnnouncements()
  + publishAnnouncement()
  + showSuccessMessage(announcementPublished)
}

class PublishAnnouncementUI {
  + createAnnouncementView(announcement)
  + displayAnnouncementView()
  + getAnnouncementDetails()
}

class PublishAnnouncementController {
  + getAnnouncement()
  + validateAnnouncementDetails(announcementDetails)
}

class Repositories {
  - announcementRepository
  + getInstance()
}

class AnnouncementRepository {
  + getAnnouncementById()
  + createAnnouncement(announcementDetails)
}

class MessageController {
  + sendMessageToOwner(announcement)
}

class Owner {
  + receiveMessage(message)
}

class Message {
  + createMessage(announcement, Agent, Owner)
}

class Commission {
  + getCommissionType()
  + validateCommission(commissionType, announcementDetails)
}

Agent --> PublishAnnouncementUI
PublishAnnouncementUI --> PublishAnnouncementController
PublishAnnouncementController --> Repositories
PublishAnnouncementController --> Commission
PublishAnnouncementController --> AnnouncementRepository
PublishAnnouncementController --> MessageController
PublishAnnouncementController --> Owner
PublishAnnouncementController --> Message
PublishAnnouncementUI --> Agent
PublishAnnouncementController --> PublishAnnouncementUI
PublishAnnouncementUI --> PublishAnnouncementController
PublishAnnouncementController --> AnnouncementRepository
PublishAnnouncementController --> Commission
MessageController --> Owner
Message --> Owner
Message --> Agent

@enduml
